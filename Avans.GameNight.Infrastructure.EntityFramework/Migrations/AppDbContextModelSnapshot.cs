// <auto-generated />
using System;
using Avans.GameNight.Infrastructure.EntityFramework.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Avans.GameNight.Infrastructure.EntityFramework.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Avans.GameNight.App.Models.BoardGame", b =>
                {
                    b.Property<string>("NameGame")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BoardGameNightNameNight")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Desciption")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KindOfGame")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Mature")
                        .HasColumnType("bit");

                    b.Property<byte[]>("Photo")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("NameGame");

                    b.HasIndex("BoardGameNightNameNight");

                    b.ToTable("BoardGame");
                });

            modelBuilder.Entity("Avans.GameNight.App.Models.BoardGameNight", b =>
                {
                    b.Property<string>("NameNight")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateTime")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("Drink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Food")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Host")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxPlayers")
                        .HasColumnType("int");

                    b.Property<int>("Ratings")
                        .HasColumnType("int");

                    b.Property<int>("TotalPlayers")
                        .HasColumnType("int");

                    b.HasKey("NameNight");

                    b.ToTable("BoardGameNight");
                });

            modelBuilder.Entity("Avans.GameNight.App.Models.Player", b =>
                {
                    b.Property<string>("MailAdress")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DrinkPreference")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FoodPreference")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Mature")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NotShow")
                        .HasColumnType("int");

                    b.Property<int>("alert")
                        .HasColumnType("int");

                    b.Property<int>("gender")
                        .HasColumnType("int");

                    b.Property<int>("role")
                        .HasColumnType("int");

                    b.HasKey("MailAdress");

                    b.ToTable("Player");
                });

            modelBuilder.Entity("Avans.GameNight.App.Models.Rating", b =>
                {
                    b.Property<string>("RaterId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FeedBack")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameRater")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RatingNight")
                        .HasColumnType("int");

                    b.Property<bool>("mature")
                        .HasColumnType("bit");

                    b.HasKey("RaterId");

                    b.ToTable("Rating");
                });

            modelBuilder.Entity("Avans.GameNight.App.Models.BoardGame", b =>
                {
                    b.HasOne("Avans.GameNight.App.Models.BoardGameNight", null)
                        .WithMany("Boardgames")
                        .HasForeignKey("BoardGameNightNameNight");
                });

            modelBuilder.Entity("Avans.GameNight.App.Models.BoardGameNight", b =>
                {
                    b.Navigation("Boardgames");
                });
#pragma warning restore 612, 618
        }
    }
}
